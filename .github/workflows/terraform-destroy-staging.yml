name: "Terraform destroy Staging"

on:
  pull_request:
    branches:
      - main
    paths:
      - "terraform/**"
      - ".github/workflows/terraform-destroy-staging.yml"
  push:
    branches:
      - main
    paths:
      - "terraform/**"
      - ".github/workflows/terraform-destroy-staging.yml"

permissions:
  id-token: write
  pull-requests: write
  contents: read

jobs:
  terragrunt-destroy-warn:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## :grimacing: Staging will be destroyed\n\nThis PR will delete all Staging Terraform resources when it is merged.'
            })

  terragrunt-destroy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ca-central-1
      TERRAFORM_VERSION: 1.6.1
      TERRAGRUNT_VERSION: 0.52.1
      TF_VAR_redis_auth_token: ${{ secrets.STAGING_WEBLATE_REDIS_AUTH_TOKEN }}
      TF_VAR_weblate_admin_email: ${{ secrets.STAGING_WEBLATE_ADMIN_EMAIL }}
      TF_VAR_weblate_admin_password: ${{ secrets.STAGING_WEBLATE_ADMIN_PASSWORD }}
      TF_VAR_weblate_database_password: ${{ secrets.STAGING_WEBLATE_DATABASE_PASSWORD }}
      TF_VAR_weblate_database_username: ${{ secrets.STAGING_WEBLATE_DATABASE_USERNAME }}
      TF_VAR_weblate_github_credentials: ${{ secrets.STAGING_WEBLATE_GITHUB_CREDENTIALS }}
      TF_VAR_weblate_google_client_id: ${{ secrets.STAGING_WEBLATE_GOOGLE_CLIENT_ID }}
      TF_VAR_weblate_google_client_secret: ${{ secrets.STAGING_WEBLATE_GOOGLE_CLIENT_SECRET }}      
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: arn:aws:iam::817721384391:role/localisation-services-apply
          role-session-name: TFDestroy
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform destroy
        working-directory: terraform/env/staging
        run: terragrunt run-all destroy --terragrunt-non-interactive -auto-approve
